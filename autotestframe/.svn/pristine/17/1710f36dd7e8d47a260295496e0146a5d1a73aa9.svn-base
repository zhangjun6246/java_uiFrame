package com.globalegrow.base;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebDriver.Navigation;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.DesiredCapabilities;

import com.globalegrow.code.PhoneLocator;
import com.globalegrow.util.Log;
import com.globalegrow.util.PropUtil;



@SuppressWarnings("rawtypes")
public class StartPhoneBrowser {

	protected static WebDriver driver;
	protected PhoneLocator locator;
	protected static String projectName = "";
	public static Map<String, List> testCasemap = new HashMap<String, List>();// 存放excel的数据
	public static String screenShotPath = "test-output/html-report/screenShot/";// 截图路径
	public String moduleName = "";// 模块名称
	protected int pageLoadTimeoutMax = 65;

	public static boolean correFail = false; // 关联失败标志

	public PhoneLocator getLocator() {
		return locator;
	}

	public void setLocator(PhoneLocator locator) {
		this.locator = locator;
	}

	public static WebDriver getDriver() {
		return driver;
	}

	public static void setDriver(WebDriver driver) {
		StartPhoneBrowser.driver = driver;
	}

	public void start(String devicesName) {
		//InitWapTest.StartBrowser();
		//driver = InitWapTest.getDriver();
		initdriver(devicesName);//初始化driver
		Log.logInfo("初始化项目名称··············");
		projectName = TestngListener2.getProjectName();
		Log.logInfo("初始化项目成功··············");
		Log.logInfo("初始化locator对象··············");
		locator = new PhoneLocator(driver, projectName + "/" + GetModulemName());// 初始化对象
		Log.logInfo("初始化locator对象成功··············");
	}

	/**
	 * 获取当前类名
	 * @return 以字符串形式，返回当前的类名
	 * @author yuyang 创建时间:2016-08-31 更新时间:2016-08-31
	 */
	protected String GetClassName() {
		String classnamestr = this.getClass().getName();
		return classnamestr;
	}

	/**
	 * 获取当前测试类的项目名
	 * @return 以字符串形式，返回当前的测试类的项目名
	 * @author yuyang 创建时间:2016-09-20 更新时间:2016-09-20
	 */
	protected String GetModulemName() {
		String[] tmpName = GetClassName().split("\\.");
		String modulemName = "";
		if (tmpName.length > 1) {
			modulemName = tmpName[tmpName.length - 1];
		}
		return modulemName;
	}

	public void init(String myProjectName, String configName) {
		
		PropUtil.GetProperties(myProjectName, configName);
		projectName = myProjectName;

	}

	/**
	 * 获取上一级的方法名
	 * @return 以字符串形式，返回上一级的方法名
	 * @author yuyang 创建时间:2016-08-31 更新时间:2016-08-31
	 */
	protected String GetMethodName() {
		String methodnamestr = Thread.currentThread().getStackTrace()[2].getMethodName();
		return methodnamestr;
	}

	/**
	 * 判断对象是否存在
	 * @param by 待检查的元素,如id,xpath等
	 * @return boolean,true-查找到，false-未查找到
	 * @author yuyang 创建时间:2016-09-05 更新时间:2016-09-05
	 */
	public static boolean isElementPresent(By by) {
		try {
			driver.findElement(by);
			return true;
		} catch (NoSuchElementException e) {
			return false;
		}
	}
	
	/**
	 * 使用谷歌浏览器模拟手机浏览器
	 * @param devicesName
	 * @author linchaojiang
	 * 创建时间:2017-06-15,更新时间:2017-06-15
	 * 备注
	 */
	public void initdriver(String devicesName){
		System.setProperty("webdriver.chrome.driver", "resources/chromedriver.exe");
		Map<String, String> mobileEmulation = new HashMap<String, String>();
		//设置设备,例如:Google Nexus 7/Apple iPhone 6
		//mobileEmulation.put("deviceName", "Google Nexus 7"); 
		Log.logInfo("使用谷歌浏览器模拟手机设备为:"+devicesName);
		mobileEmulation.put("deviceName", devicesName); 
		Map<String, Object> chromeOptions = new HashMap<String, Object>();     
		chromeOptions.put("mobileEmulation", mobileEmulation);     
		DesiredCapabilities capabilities = DesiredCapabilities.chrome();       
		capabilities.setCapability(ChromeOptions.CAPABILITY, chromeOptions);
		try {
			Log.logInfo("开始启动driver~~~");
			driver = new ChromeDriver(capabilities);
			Log.logInfo("启动driver成功~~~");
		} catch (Exception e) {
			Log.logInfo("启动driver失败~~~");
			Log.logInfo(e.getMessage());
		}		
	}

}
