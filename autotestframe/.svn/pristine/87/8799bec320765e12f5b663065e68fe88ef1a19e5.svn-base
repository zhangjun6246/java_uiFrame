package com.globalegrow.util;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import org.bson.Document;

import com.globalegrow.util.Log;
import com.google.gson.Gson;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import com.mongodb.MongoCredential;
import com.mongodb.ServerAddress;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import com.mongodb.util.JSON;

import net.sf.json.JSONObject;

public class MongoDBUtil {
	public static MongoClient mongoClient;
	public static MongoDatabase mongoDatabase;

	public static void MongoDBconnet() {
		// 连接到MongoDB服务 如果是远程连接可以替换“localhost”为服务器所在IP地址
		// ServerAddress()两个参数分别为 服务器地址 和 端口
		ServerAddress serverAddress = new ServerAddress("10.40.6.24", 27017);
		List<ServerAddress> addrs = new ArrayList<>();
		addrs.add(serverAddress);

		// MongoCredential.createScramSha1Credential()三个参数分别为 用户名 数据库名称 密码
		MongoCredential credential = MongoCredential.createScramSha1Credential("root", "admin",
				"sSLJkLPXPMpWaOsA".toCharArray());
		List<MongoCredential> credentials = new ArrayList<MongoCredential>();
		credentials.add(credential);

		// 通过连接认证获取MongoDB连接
		mongoClient = new MongoClient(addrs, credentials);
		// 获取表连接
		mongoDatabase = mongoClient.getDatabase("uiautotest");

	}

	@SuppressWarnings({ "rawtypes", "unchecked" })
	public void insertDataInDb(HashMap<String, String> headmap, HashMap<String, List<String>> datamap,
		HashMap<String, Map<String, String>> casemap) {
		Log.logInfo("开始把测试结果数据写入数据库!!!");
		MongoDBconnet();
		try {
			Iterator keys = datamap.keySet().iterator();
			while (keys.hasNext()) {
				String key = (String) keys.next();
				datamap.get(key).get(0);
				String video_path = "../videoShot/" + datamap.get(key).get(7) + "/" + datamap.get(key).get(3) + ".mp4";
				Map<String, String> cases = casemap.get(key);
				String manual_test_time;// 手工测试时间
				if (casemap.get(key) == null) {
					manual_test_time = "0";
				} else {
					manual_test_time = cases.get("manual_test_time");
				}

				MongoCollection<Document> mongoCollection = mongoDatabase.getCollection("auto_runinfo");
				Document document = new Document("test_id", datamap.get(key).get(6))
						.append("test_name", datamap.get(key).get(3))
						.append("project_code", headmap.get("project_code"))
						.append("module_code", datamap.get(key).get(2)).append("env", headmap.get("env"))
						.append("job", headmap.get("job")).append("taskid", headmap.get("task_id"))
						.append("run_person", headmap.get("run_person")).append("run_time", datamap.get(key).get(0))
						.append("run_result", datamap.get(key).get(4)).append("os", headmap.get("os"))
						.append("environment", headmap.get("environment")).append("imgName", datamap.get(key).get(5))
						.append("run_finish_time", datamap.get(key).get(1)).append("manual_test_time", manual_test_time)
						.append("video_path", video_path);
				System.out.println(document);
				List<Document> documents = new ArrayList<Document>();
				documents.add(document);
				mongoCollection.insertMany(documents);
				System.out.println("文档插入成功" + documents);
				/*
				 * mongoCollection.insertOne({'name':'zhangsan'});
				 * FindIterable<Document> findIterable = mongoCollection.find();
				 * MongoCursor<Document> mongoCursor = findIterable.iterator();
				 * while(mongoCursor.hasNext()){
				 * System.out.println(mongoCursor.next()); }
				 */

			}

		} catch (Exception e) {
			System.err.println(e.getClass().getName() + ": " + e.getMessage());
		}
	}

	public static void main(String[] args) {
		try {
			// 连接到MongoDB服务 如果是远程连接可以替换“localhost”为服务器所在IP地址
			// ServerAddress()两个参数分别为 服务器地址 和 端口
			ServerAddress serverAddress = new ServerAddress("10.40.6.24", 27017);
			List<ServerAddress> addrs = new ArrayList<>();
			addrs.add(serverAddress);

			// MongoCredential.createScramSha1Credential()三个参数分别为 用户名 数据库名称 密码
			MongoCredential credential = MongoCredential.createScramSha1Credential("root", "admin",
					"sSLJkLPXPMpWaOsA".toCharArray());
			List<MongoCredential> credentials = new ArrayList<MongoCredential>();
			credentials.add(credential);

			// 通过连接认证获取MongoDB连接
			MongoClient mongoClient = new MongoClient(addrs, credentials);

			// 连接到数据库
			MongoDatabase mongoDatabase = mongoClient.getDatabase("test");

			MongoCollection<Document> collection = mongoDatabase.getCollection("task_log_info");
			System.out.println("集合 test 选择成功");
			// 插入文档
			Document document = new Document("title", "MongoDB").append("description", "database").append("likes", 100)
					.append("by", "Fly");
			List<Document> documents = new ArrayList<Document>();
			documents.add(document);
			collection.insertMany(documents);
			System.out.println("文档插入成功");

		} catch (Exception e) {
			System.err.println(e.getClass().getName() + ": " + e.getMessage());
		}
	}

}
